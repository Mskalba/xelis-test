export class RPC {
    constructor(endpoint) {
        this.endpoint = endpoint;
        this.timeout = 3000;
    }
    async post(method, params, headers) {
        try {
            const controller = new AbortController();
            const body = JSON.stringify({ id: 1, jsonrpc: '2.0', method: method, params });
            const timeoutId = setTimeout(() => {
                controller.abort();
            }, this.timeout);
            headers = headers || new Headers();
            headers.set(`Content-Type`, `application/json`);
            const res = await fetch(this.endpoint, {
                headers,
                method: `POST`,
                body,
                signal: controller.signal
            });
            clearTimeout(timeoutId);
            if (res.ok) {
                const data = await res.json();
                if (data.error) {
                    return Promise.reject(new Error(data.error.message));
                }
                return Promise.resolve(data);
            }
            else {
                return Promise.reject(new Error(`${res.status} - ${res.statusText}`));
            }
        }
        catch (err) {
            console.log(err);
            return Promise.reject(err);
        }
    }
}
